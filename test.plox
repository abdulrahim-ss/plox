class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream : Doughnut {
  cook() {
    parent.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}
print 0 ? "is truthy" : "is falsy";
BostonCream().cook();

/* class Foo {
  init() {
    print 3;
  }
}

var foo = Foo();
print foo.init; */

/* class Thing {
  getCallback() {
    fun localFunction() {
      print this;
    }

    return localFunction;
  }
}

var callback = Thing().getCallback();
callback(); */

/* class Cake {
  taste() {
    var adjective = "delicious";
    print "The " + this.flavor + " cake is " + adjective + "!";
  }
}

var cake = Cake();
cake.flavor = "German chocolate";
cake.taste(); */

/* {
    var a = 1;
    {
        var b = 2;
        {
            var c = 3;
            c; b; a;
        }
    }

} */

/*var a = "global";
{
    fun showA() {
        print a;
    }
    showA();
    var a = "block";
    {{{{showA();}}}}
}

/*fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

var start = clock();
for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}
print clock() - start;*/
/*var a = 0;
var temp;
var b = 1;
while (a < 100){
  print a;
  temp = a;
  a = b;
  b = b + temp;
}*/

/*var a = 0;
var temp;
var start = clock();
for (var b = 1; a < 10000; b = temp + b) {
  print a;
  temp = a;
  a = b;
}
var time = clock() - start;
print "elapsed time: " + time;*/

/*
for (var b = 0; b <= 20; b = 1 + b){
  if (b == 10) continue;
  print b;
}*/